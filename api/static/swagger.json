{
    "swagger": "2.0",
    "info": {
      "version": "1.0.0",
      "title": "Flask API Documentation for NoteCreation-Flask"
    },
    "basePath": "/",
    "schemes": [
      "http"
    ],
    "tags": [
      {
        "name": "User",
        "description": "Operations related to users"
      },
      {
        "name": "Note",
        "description": "Operations related to notes"
      },
      {
        "name": "Auth",
        "description": "Authentication and registration operations"
      }
    ],
    "paths": {
      "/api/v1/users": {
        "get": {
          "tags": [
            "User"
          ],
          "summary": "Get all users",
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/User"
                }
              }
            },
            "500": {
              "description": "Unexpected error"
            }
          }
        }
      },
      "/api/v1/users/{id_user}": {
        "get": {
          "tags": [
            "User"
          ],
          "summary": "Get user by ID",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id_user",
              "in": "path",
              "description": "ID of the user to get",
              "required": true,
              "type": "integer"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "schema": {
                "$ref": "#/definitions/User"
              }
            },
            "404": {
              "description": "User not found"
            },
            "500": {
              "description": "Unexpected error"
            }
          }
        },
        "patch": {
          "tags": [
            "User"
          ],
          "summary": "Update user by ID",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id_user",
              "in": "path",
              "description": "ID of the user to update",
              "required": true,
              "type": "integer"
            },
            {
              "name": "body",
              "in": "body",
              "description": "Updated user object",
              "required": true,
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "User updated successfully"
            },
            "404": {
              "description": "User not found"
            },
            "500": {
              "description": "Unexpected error"
            }
          }
        },
        "delete": {
          "tags": [
            "User"
          ],
          "summary": "Delete user by ID",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id_user",
              "in": "path",
              "description": "ID of the user to delete",
              "required": true,
              "type": "integer"
            }
          ],
          "responses": {
            "200": {
              "description": "User deleted successfully"
            },
            "404": {
              "description": "User not found"
            },
            "500": {
              "description": "Unexpected error"
            }
          }
        }
      },
      "/api/v1/notes": {
        "get": {
          "tags": [
            "Note"
          ],
          "summary": "Get all notes",
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Note"
                }
              }
            },
            "500": {
              "description": "Unexpected error"
            }
          }
        },
        "post": {
          "tags": [
            "Note"
          ],
          "summary": "Create a new note",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "description": "Note object to be created",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Note"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Note created successfully"
            },
            "500": {
              "description": "Unexpected error"
            }
          }
        }
      },
      "/api/v1/notes/{id_note}": {
        "get": {
          "tags": [
            "Note"
          ],
          "summary": "Get note by ID",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id_note",
              "in": "path",
              "description": "ID of the note to get",
              "required": true,
              "type": "integer"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "schema": {
                "$ref": "#/definitions/Note"
              }
            },
            "404": {
              "description": "Note not found"
            },
            "500": {
              "description": "Unexpected error"
            }
          }
        },
        "patch": {
          "tags": [
            "Note"
          ],
          "summary": "Update note by ID",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id_note",
              "in": "path",
              "description": "ID of the note to update",
              "required": true,
              "type": "integer"
            },
            {
              "name": "body",
              "in": "body",
              "description": "Updated note object",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Note"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Note updated successfully"
            },
            "404": {
              "description": "Note not found"
            },
            "500": {
              "description": "Unexpected error"
            }
          }
        },
        "delete": {
          "tags": [
            "Note"
          ],
          "summary": "Delete note by ID",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id_note",
              "in": "path",
              "description": "ID of the note to delete",
              "required": true,
              "type": "integer"
            }
          ],
          "responses": {
            "200": {
              "description": "Note deleted successfully"
            },
            "404": {
              "description": "Note not found"
            },
            "500": {
              "description": "Unexpected error"
            }
          }
        }
      },
      "/api/v1/auth/register": {
        "post": {
          "tags": [
            "Auth"
          ],
          "summary": "Register a new user",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "description": "User object to be registered",
              "required": true,
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "User registered successfully"
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Unexpected error"
            }
          }
        }
      },
      "/api/v1/auth/login": {
        "post": {
          "tags": [
            "Auth"
          ],
          "summary": "Log in user",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "description": "User credentials",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Log in successful"
            },
            "400": {
              "description": "Bad request"
            },
            "404": {
              "description": "User not found"
            },
            "500": {
              "description": "Unexpected error"
            }
          }
        }
      }
    },
    "definitions": {
      "User": {
        "type": "object",
        "properties": {
          "id_user": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "Note": {
        "type": "object",
        "properties": {
          "id_note": {
            "type": "integer"
          },
          "id_user": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          }
        }
      }
    }
  }
  